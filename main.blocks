<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="dxZ.}nNhm@YoUu#4hRk(" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="IP@+/~HVv+0WI)nzqxI@" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace renewableEnergy {" line1="" line2="    //% blockId=getEnergy" line3="    //% block=&quot;get energy from pin %pin&quot;" line4="    export function getEnergy(pin: AnalogPin) {" line5="        let energy " line6="        energy = pins.analogReadPin(pin)" line7="        if (energy&gt;maxEnergy)" line8="            energy = 200" line9="        return energy" line10="    }" line11="" line12="    //% blockId=sendEnergy" line13="    //% block=&quot;send energy wind %wind solar %solar to grid&quot;" line14="    export function sendEnergy (wind: number, solar: number) {" line15="        serial.writeLine(&quot;#&quot; + wind + &quot;,&quot; + solar + &quot;,&quot; + (wind + solar) + &quot;.&quot;)" line16="    }" line17="" line18="    //% blockId=useEnergy" line19="    //% block=&quot;user energy for device %deviceName on pin %pin&quot;" line20="    export function useEnergy(pin: AnalogPin, deviceName: string) {" line21="        " line22="    }" line23="" line24="    //% blockId=addDevice" line25="    //% block=&quot;add device %name using power %power&quot;" line26="    export function addDevice (name: string, power: number) {" line27="        " line28="    }" line29="    let maxEnergy = 200" line30="}" numlines="31"></mutation></block></statement></block><block type="argument_reporter_number" id="UcDz3654#~VhebY61gNs" disabled="true" x="634" y="47"><field name="VALUE">wind</field></block></xml>